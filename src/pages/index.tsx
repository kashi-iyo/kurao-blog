import { Box, Grid, Text } from '@chakra-ui/layout'
import { Flex, Icon } from '@chakra-ui/react'
import { NextPage } from 'next'
import Head from 'next/head'
import { Navbar } from 'src/components/organisms/Navbar'
import { FaChevronRight } from 'react-icons/fa'
import { useMemo } from 'react'

type Article = {
  id: string
  title: string
  body: string
}

type Props = {
  articles: Article[]
}

const Home: NextPage<Props> = ({ articles }) => {
  const itemList = useMemo(() => {
    return [
      {
        topic: 'Articles',
        item: articles,
      },
      {
        topic: 'Links',
        item: articles,
      },
    ]
  }, [articles])

  const MainBody = useMemo(() => {
    return itemList.map((value, index) => {
      return (
        <Flex key={index} direction="column" mb="64px">
          <Flex mb="16px" cursor="pointer" _hover={{ opacity: 0.7 }}>
            <Text mr="32px">{value.topic}</Text>
            <Flex align="center" fontSize="0.9em">
              <Text mr="2px">すべて見る</Text>
              <Icon as={FaChevronRight} />
            </Flex>
          </Flex>
          <Grid templateColumns="repeat(3, 1fr)" gap={10}>
            <Box
              w="100%"
              h="300"
              bg="gray.100"
              filter="drop-shadow(0px 2px 8px rgba(63, 145, 220, 0.24))"
            />
            <Box
              w="100%"
              h="300"
              bg="gray.100"
              filter="drop-shadow(0px 2px 8px rgba(63, 145, 220, 0.24))"
            />
            <Box
              w="100%"
              h="300"
              bg="gray.100"
              filter="drop-shadow(0px 2px 8px rgba(63, 145, 220, 0.24))"
            />
          </Grid>
        </Flex>
      )
    })
  }, [itemList])

  return (
    <>
      <Head>
        <title>kurao</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box
        color="rgba(64, 64, 64, 0.9)"
        fontSize="1.2em"
        fontWeight="bold"
        transition="all 0.5s ease-in-out"
      >
        {/* ヘッダー */}
        <Navbar />
        <Box p="32px">
          <Flex direction="column">
            {/* Profile */}
            <Flex direction="column" mb="64px">
              <Flex mb="16px" cursor="pointer" _hover={{ opacity: 0.7 }}>
                <Text mr="32px">Profile</Text>
                <Flex align="center" fontSize="0.9em">
                  <Text mr="2px">すべて見る</Text>
                  <Icon as={FaChevronRight} />
                </Flex>
              </Flex>
            </Flex>
            {/* メインボディー */}
            {MainBody}
          </Flex>
        </Box>

        {articles.length > 0
          ? articles.map((article) => (
              <div key={article.id}>
                <h1>{article.title}</h1>C<p>{article.id}</p>
              </div>
            ))
          : null}
      </Box>
    </>
  )
}

export const getStaticProps = async () => {
  const key = {
    headers: { 'X-MICROCMS-API-KEY': process.env.API_KEY || '' },
  }
  const BASE_PATH = process.env.BASE_PATH

  const res = await fetch(`${BASE_PATH}/articles`, key)
  const data = await res.json()
  return {
    props: {
      articles: data.contents,
    },
  }
}

export default Home
